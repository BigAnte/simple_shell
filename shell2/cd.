#include "shell.h"


/**
 * cd_home - changes directory to home as well as updates environment vars.
 * @env: Array of strings containing envirionment variables.
 *
 * Return: 0.
 */
int cd_home(char **env)
{
	char *home;
	char *cwd;

	cwd = _getcwd(env);
	_setenv("OLDPWD", cwd, env);
	free(cwd);

	home = _getenv("HOME");
	chdir(home);
	free(home);

	cwd = _getcwd(env);
	_setenv("PWD", cwd, env);
	free(cwd);

	return (0);
}


/**
 * cd_prev - change to previous directory and update environment variables.
 * @env: Array of strings containing envirionment variables.
 *
 * Return: 0.
 */
int cd_prev(char **env)
{
	char *prevdir;
	char *cwd;

	cwd = _getcwd(env);

	prevdir = _getenv("OLDPWD");
	chdir(prevdir);
	free(prevdir);

	_setenv("OLDPWD", cwd, env);
	free(cwd);

	cwd = _getcwd(env);
	_setenv("PWD", cwd, env);
	free(cwd);

	return (0);
}



/**
 * _cd - handles the change directory built-in function.
 * @tokens: The parsed command line from stdin.
 * @env: Array of strings containing envirionment variables.
 *
 * Return: 0.
 */
int _cd(char **tokens, char **env)
{
	char *cwd;

	if (tokens[1] != NULL)
	{
		if (_strncmp(tokens[1], "-", 1) == 0)
		{
			cd_prev(env);
		}
		else
		{
			cwd = _getcwd(env);
			_setenv("OLDPWD", cwd, env);
			free(cwd);
			if (chdir(tokens[1]) == -1)
			{
				perror(tokens[1]);
			}

			cwd = _getcwd(env);
			_setenv("PWD", cwd, env);
			free(cwd);
		}
	}
	else
	{
		cd_home(env);
	}

	return (0);
}